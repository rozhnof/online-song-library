services:
  app:
    build:
      context: ../
      dockerfile: build/docker/Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8080:8080"
    env_file: ".env"


  postgres:
    image: postgres:13
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 3s
      timeout: 30s
      retries: 5
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/repository/data
    env_file: ".env"


  migrate:
    image: migrate/migrate:4
    command: -path=../migrations/ -database "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?sslmode=${POSTGRES_SSLMODE}" up
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ../migrations:/migrations:ro
    env_file: ".env"


  jaeger:
    image: jaegertracing/all-in-one:1.35
    environment:
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
      - COLLECTOR_OTLP_ENABLED=true
    ports:
      - 6831:6831/udp 
      - 6832:6832/udp 
      - 5778:5778 
      - 16686:16686 
      - 4317:4317 
      - 4318:4318 
      - 14250:14250 
      - 14268:14268 
      - 14269:14269 
      - 9411:9411 


volumes:
  postgres-data: